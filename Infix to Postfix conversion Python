def precedence(op):
    if op == '+' or op == '-':
        return 1
    if op == '*' or op == '/':
        return 2
    return 0

def isOperand(ch):
    return ch.isalpha() or ch.isdigit()

def infixToPostfix(expression):
    stack = []
    postfix = ""
    for ch in expression:
        if isOperand(ch):
            postfix += ch
        elif ch == '(':
            stack.append(ch)
        elif ch == ')':
            while stack and stack[-1] != '(':
                postfix += stack.pop()
            stack.pop()
        else:
            while stack and precedence(ch) <= precedence(stack[-1]):
                postfix += stack.pop()
            stack.append(ch)
    while stack:
        postfix += stack.pop()
    return postfix

expr = input("Enter an infix expression: ")
result = infixToPostfix(expr)
print("Postfix expression:", result)
